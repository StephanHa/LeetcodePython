# 724 寻找数组的中心下标（简单）
# https://leetcode.cn/problems/find-pivot-index/
# 给一个整数数组nums ，请计算数组的 中心下标 。
# 数组 中心下标 是数组的一个下标，其左侧所有元素相加的和等于右侧所有元素相加的和。
# 如果中心下标位于数组最左端，那么左侧数之和视为 0 ，因为在下标的左侧不存在元素。这一点对于中心下标位于数组最右端同样适用。
# 如果数组有多个中心下标，应该返回 最靠近左边 的那一个。如果数组不存在中心下标，返回 -1 。

# 方法1，直接模拟
# 左右测都不包含中心元素，初始时左侧为0，右侧为数组整数之和
# 遍历数组时，右侧减去当前遍历的整数，再判断左右侧是否相等，如果相等则返回当前遍历整数的下标
# 不相等，左侧加上当前遍历的整数，继续下次遍历判断
class Solution:
    def pivotIndex(self, nums: List[int]) -> int:
        left = 0
        right = sum(nums)
        for i in range(len(nums)):
            right -= nums[i]
            if left == right:
                return i
            left += nums[i]
        return -1


# 输入：nums = [1, 7, 3, 6, 5, 6]
# 输出：3
#
# 输入：nums = [1, 2, 3]
# 输出：-1

# 执行用时：60 ms, 在所有 Python3 提交中击败了39.57%的用户
# 内存消耗：15.9 MB, 在所有 Python3 提交中击败了61.21%的用户
# 通过测试用例：745 / 745
